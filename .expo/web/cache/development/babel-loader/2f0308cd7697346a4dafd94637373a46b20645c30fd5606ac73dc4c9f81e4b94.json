{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/akerim/cursorProjects/canonCraft/gameContext.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport AIStoryService from \"./aiService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar GameContext = createContext();\nvar initialState = {\n  currentStory: null,\n  currentScene: null,\n  personaScore: 50,\n  gameProgress: {},\n  storyPacks: [],\n  adsWatched: 0,\n  totalChoicesMade: 0,\n  isGeneratingScene: false,\n  currentCharacterPack: null\n};\nvar ACTIONS = {\n  START_AI_STORY: 'START_AI_STORY',\n  SET_SCENE: 'SET_SCENE',\n  UPDATE_PERSONA: 'UPDATE_PERSONA',\n  RESET_GAME: 'RESET_GAME',\n  SET_STORY_PACKS: 'SET_STORY_PACKS',\n  INCREMENT_ADS: 'INCREMENT_ADS',\n  INCREMENT_CHOICES: 'INCREMENT_CHOICES',\n  LOAD_SAVED_STATE: 'LOAD_SAVED_STATE',\n  SET_GENERATING: 'SET_GENERATING',\n  SET_CHARACTER_PACK: 'SET_CHARACTER_PACK'\n};\nfunction gameReducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.START_AI_STORY:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentStory: action.payload.story,\n        currentScene: action.payload.scene,\n        currentCharacterPack: action.payload.characterPack,\n        personaScore: 50,\n        totalChoicesMade: 0\n      });\n    case ACTIONS.SET_SCENE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentScene: action.payload\n      });\n    case ACTIONS.UPDATE_PERSONA:\n      var newScore = Math.max(0, Math.min(100, state.personaScore + action.payload));\n      return _objectSpread(_objectSpread({}, state), {}, {\n        personaScore: newScore,\n        totalChoicesMade: state.totalChoicesMade + 1\n      });\n    case ACTIONS.RESET_GAME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentStory: null,\n        currentScene: null,\n        currentCharacterPack: null,\n        personaScore: 50,\n        totalChoicesMade: 0,\n        isGeneratingScene: false\n      });\n    case ACTIONS.SET_STORY_PACKS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        storyPacks: action.payload\n      });\n    case ACTIONS.INCREMENT_ADS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        adsWatched: state.adsWatched + 1\n      });\n    case ACTIONS.INCREMENT_CHOICES:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        totalChoicesMade: state.totalChoicesMade + 1\n      });\n    case ACTIONS.LOAD_SAVED_STATE:\n      return _objectSpread(_objectSpread({}, state), action.payload);\n    case ACTIONS.SET_GENERATING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isGeneratingScene: action.payload\n      });\n    case ACTIONS.SET_CHARACTER_PACK:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentCharacterPack: action.payload\n      });\n    default:\n      return state;\n  }\n}\nexport function GameContextProvider(_ref) {\n  var children = _ref.children;\n  var _useReducer = useReducer(gameReducer, initialState),\n    _useReducer2 = _slicedToArray(_useReducer, 2),\n    state = _useReducer2[0],\n    dispatch = _useReducer2[1];\n  var saveGameState = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var gameState = {\n          currentStory: state.currentStory,\n          currentScene: state.currentScene,\n          currentCharacterPack: state.currentCharacterPack,\n          personaScore: state.personaScore,\n          totalChoicesMade: state.totalChoicesMade,\n          adsWatched: state.adsWatched\n        };\n        yield AsyncStorage.setItem('gameState', JSON.stringify(gameState));\n      } catch (error) {\n        console.error('Error saving game state:', error);\n      }\n    });\n    return function saveGameState() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var loadGameState = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var savedState = yield AsyncStorage.getItem('gameState');\n        if (savedState) {\n          var parsedState = JSON.parse(savedState);\n          dispatch({\n            type: ACTIONS.LOAD_SAVED_STATE,\n            payload: parsedState\n          });\n        }\n      } catch (error) {\n        console.error('Error loading game state:', error);\n      }\n    });\n    return function loadGameState() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    if (state.currentStory && state.currentScene) {\n      saveGameState();\n    }\n  }, [state.currentScene, state.personaScore]);\n  var gameActions = {\n    startAIStory: function () {\n      var _startAIStory = _asyncToGenerator(function* (characterPack) {\n        dispatch({\n          type: ACTIONS.SET_GENERATING,\n          payload: true\n        });\n        dispatch({\n          type: ACTIONS.SET_CHARACTER_PACK,\n          payload: characterPack\n        });\n        try {\n          var initialScene = yield AIStoryService.startStory(characterPack);\n          var story = {\n            id: characterPack.id,\n            title: characterPack.title,\n            character: characterPack.character,\n            persona: characterPack.persona,\n            isAIGenerated: true\n          };\n          dispatch({\n            type: ACTIONS.START_AI_STORY,\n            payload: {\n              story: story,\n              scene: initialScene,\n              characterPack: characterPack\n            }\n          });\n        } catch (error) {\n          console.error('Error starting AI story:', error);\n          var fallbackScene = {\n            scene_id: 'scene_1',\n            title: 'Beginning',\n            narration: `Your adventure as ${characterPack.character} begins...`,\n            choices: [{\n              choice_id: '1',\n              text: 'Continue the story',\n              persona_score: 0,\n              next_scene: 'scene_2'\n            }]\n          };\n          var _story = {\n            id: characterPack.id,\n            title: characterPack.title,\n            character: characterPack.character,\n            persona: characterPack.persona,\n            isAIGenerated: true\n          };\n          dispatch({\n            type: ACTIONS.START_AI_STORY,\n            payload: {\n              story: _story,\n              scene: fallbackScene,\n              characterPack: characterPack\n            }\n          });\n        } finally {\n          dispatch({\n            type: ACTIONS.SET_GENERATING,\n            payload: false\n          });\n        }\n      });\n      function startAIStory(_x) {\n        return _startAIStory.apply(this, arguments);\n      }\n      return startAIStory;\n    }(),\n    generateNextScene: function () {\n      var _generateNextScene = _asyncToGenerator(function* (choice) {\n        dispatch({\n          type: ACTIONS.SET_GENERATING,\n          payload: true\n        });\n        try {\n          var _state$currentStory;\n          var currentContext = {\n            personaScore: state.personaScore,\n            totalChoicesMade: state.totalChoicesMade,\n            character: (_state$currentStory = state.currentStory) == null ? void 0 : _state$currentStory.character\n          };\n          var nextScene = yield AIStoryService.generateNextScene(choice, currentContext);\n          dispatch({\n            type: ACTIONS.SET_SCENE,\n            payload: nextScene\n          });\n          return nextScene;\n        } catch (error) {\n          console.error('Error generating next scene:', error);\n          throw error;\n        } finally {\n          dispatch({\n            type: ACTIONS.SET_GENERATING,\n            payload: false\n          });\n        }\n      });\n      function generateNextScene(_x2) {\n        return _generateNextScene.apply(this, arguments);\n      }\n      return generateNextScene;\n    }(),\n    setScene: function setScene(scene) {\n      dispatch({\n        type: ACTIONS.SET_SCENE,\n        payload: scene\n      });\n    },\n    updatePersonaScore: function updatePersonaScore(delta) {\n      dispatch({\n        type: ACTIONS.UPDATE_PERSONA,\n        payload: delta\n      });\n    },\n    resetGame: function resetGame() {\n      dispatch({\n        type: ACTIONS.RESET_GAME\n      });\n    },\n    setStoryPacks: function setStoryPacks(packs) {\n      dispatch({\n        type: ACTIONS.SET_STORY_PACKS,\n        payload: packs\n      });\n    },\n    incrementAdsWatched: function incrementAdsWatched() {\n      dispatch({\n        type: ACTIONS.INCREMENT_ADS\n      });\n    },\n    getPersonaMessage: function getPersonaMessage() {\n      var score = state.personaScore;\n      if (score >= 80) return \"Perfect embodiment! You're truly in character.\";\n      if (score >= 60) return \"Great portrayal! You understand this character well.\";\n      if (score >= 40) return \"Good effort! Some choices felt authentic.\";\n      if (score >= 20) return \"Interesting interpretation! Very different from the original.\";\n      return \"Completely off-character! But that's an adventure too.\";\n    },\n    findSceneById: function findSceneById(sceneId) {\n      return null;\n    },\n    loadGameState: loadGameState,\n    saveGameState: saveGameState\n  };\n  return _jsxDEV(GameContext.Provider, {\n    value: _objectSpread({\n      state: state\n    }, gameActions),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 5\n  }, this);\n}\nexport function useGame() {\n  var context = useContext(GameContext);\n  if (!context) {\n    throw new Error('useGame must be used within a GameContextProvider');\n  }\n  return context;\n}","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","AsyncStorage","AIStoryService","jsxDEV","_jsxDEV","GameContext","initialState","currentStory","currentScene","personaScore","gameProgress","storyPacks","adsWatched","totalChoicesMade","isGeneratingScene","currentCharacterPack","ACTIONS","START_AI_STORY","SET_SCENE","UPDATE_PERSONA","RESET_GAME","SET_STORY_PACKS","INCREMENT_ADS","INCREMENT_CHOICES","LOAD_SAVED_STATE","SET_GENERATING","SET_CHARACTER_PACK","gameReducer","state","action","type","_objectSpread","payload","story","scene","characterPack","newScore","Math","max","min","GameContextProvider","_ref","children","_useReducer","_useReducer2","_slicedToArray","dispatch","saveGameState","_ref2","_asyncToGenerator","gameState","setItem","JSON","stringify","error","console","apply","arguments","loadGameState","_ref3","savedState","getItem","parsedState","parse","gameActions","startAIStory","_startAIStory","initialScene","startStory","id","title","character","persona","isAIGenerated","fallbackScene","scene_id","narration","choices","choice_id","text","persona_score","next_scene","_x","generateNextScene","_generateNextScene","choice","_state$currentStory","currentContext","nextScene","_x2","setScene","updatePersonaScore","delta","resetGame","setStoryPacks","packs","incrementAdsWatched","getPersonaMessage","score","findSceneById","sceneId","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","useGame","context","Error"],"sources":["/Users/akerim/cursorProjects/canonCraft/gameContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport AIStoryService from './aiService';\n\n// Game State Context\nconst GameContext = createContext();\n\n// Initial state\nconst initialState = {\n  currentStory: null,\n  currentScene: null,\n  personaScore: 50, // 0-100 scale\n  gameProgress: {},\n  storyPacks: [],\n  adsWatched: 0,\n  totalChoicesMade: 0,\n  isGeneratingScene: false,\n  currentCharacterPack: null,\n};\n\n// Actions\nconst ACTIONS = {\n  START_AI_STORY: 'START_AI_STORY',\n  SET_SCENE: 'SET_SCENE',\n  UPDATE_PERSONA: 'UPDATE_PERSONA',\n  RESET_GAME: 'RESET_GAME',\n  SET_STORY_PACKS: 'SET_STORY_PACKS',\n  INCREMENT_ADS: 'INCREMENT_ADS',\n  INCREMENT_CHOICES: 'INCREMENT_CHOICES',\n  LOAD_SAVED_STATE: 'LOAD_SAVED_STATE',\n  SET_GENERATING: 'SET_GENERATING',\n  SET_CHARACTER_PACK: 'SET_CHARACTER_PACK',\n};\n\n// Reducer\nfunction gameReducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.START_AI_STORY:\n      return {\n        ...state,\n        currentStory: action.payload.story,\n        currentScene: action.payload.scene,\n        currentCharacterPack: action.payload.characterPack,\n        personaScore: 50,\n        totalChoicesMade: 0,\n      };\n    \n    case ACTIONS.SET_SCENE:\n      return {\n        ...state,\n        currentScene: action.payload,\n      };\n    \n    case ACTIONS.UPDATE_PERSONA:\n      const newScore = Math.max(0, Math.min(100, state.personaScore + action.payload));\n      return {\n        ...state,\n        personaScore: newScore,\n        totalChoicesMade: state.totalChoicesMade + 1,\n      };\n    \n    case ACTIONS.RESET_GAME:\n      return {\n        ...state,\n        currentStory: null,\n        currentScene: null,\n        currentCharacterPack: null,\n        personaScore: 50,\n        totalChoicesMade: 0,\n        isGeneratingScene: false,\n      };\n    \n    case ACTIONS.SET_STORY_PACKS:\n      return {\n        ...state,\n        storyPacks: action.payload,\n      };\n    \n    case ACTIONS.INCREMENT_ADS:\n      return {\n        ...state,\n        adsWatched: state.adsWatched + 1,\n      };\n    \n    case ACTIONS.INCREMENT_CHOICES:\n      return {\n        ...state,\n        totalChoicesMade: state.totalChoicesMade + 1,\n      };\n    \n    case ACTIONS.LOAD_SAVED_STATE:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    \n    case ACTIONS.SET_GENERATING:\n      return {\n        ...state,\n        isGeneratingScene: action.payload,\n      };\n    \n    case ACTIONS.SET_CHARACTER_PACK:\n      return {\n        ...state,\n        currentCharacterPack: action.payload,\n      };\n    \n    default:\n      return state;\n  }\n}\n\n// Context Provider\nexport function GameContextProvider({ children }) {\n  const [state, dispatch] = useReducer(gameReducer, initialState);\n\n  // Save game state to AsyncStorage\n  const saveGameState = async () => {\n    try {\n      const gameState = {\n        currentStory: state.currentStory,\n        currentScene: state.currentScene,\n        currentCharacterPack: state.currentCharacterPack,\n        personaScore: state.personaScore,\n        totalChoicesMade: state.totalChoicesMade,\n        adsWatched: state.adsWatched,\n      };\n      await AsyncStorage.setItem('gameState', JSON.stringify(gameState));\n    } catch (error) {\n      console.error('Error saving game state:', error);\n    }\n  };\n\n  // Load game state from AsyncStorage\n  const loadGameState = async () => {\n    try {\n      const savedState = await AsyncStorage.getItem('gameState');\n      if (savedState) {\n        const parsedState = JSON.parse(savedState);\n        dispatch({ type: ACTIONS.LOAD_SAVED_STATE, payload: parsedState });\n      }\n    } catch (error) {\n      console.error('Error loading game state:', error);\n    }\n  };\n\n  // Auto-save whenever critical state changes\n  useEffect(() => {\n    if (state.currentStory && state.currentScene) {\n      saveGameState();\n    }\n  }, [state.currentScene, state.personaScore]);\n\n  // Game actions\n  const gameActions = {\n    // Start a new AI-driven story\n    startAIStory: async (characterPack) => {\n      dispatch({ type: ACTIONS.SET_GENERATING, payload: true });\n      dispatch({ type: ACTIONS.SET_CHARACTER_PACK, payload: characterPack });\n      \n      try {\n        const initialScene = await AIStoryService.startStory(characterPack);\n        const story = {\n          id: characterPack.id,\n          title: characterPack.title,\n          character: characterPack.character,\n          persona: characterPack.persona,\n          isAIGenerated: true,\n        };\n        \n        dispatch({ \n          type: ACTIONS.START_AI_STORY, \n          payload: { \n            story, \n            scene: initialScene, \n            characterPack \n          } \n        });\n      } catch (error) {\n        console.error('Error starting AI story:', error);\n        // Fallback to basic story start\n        const fallbackScene = {\n          scene_id: 'scene_1',\n          title: 'Beginning',\n          narration: `Your adventure as ${characterPack.character} begins...`,\n          choices: [{\n            choice_id: '1',\n            text: 'Continue the story',\n            persona_score: 0,\n            next_scene: 'scene_2'\n          }]\n        };\n        const story = {\n          id: characterPack.id,\n          title: characterPack.title,\n          character: characterPack.character,\n          persona: characterPack.persona,\n          isAIGenerated: true,\n        };\n        dispatch({ \n          type: ACTIONS.START_AI_STORY, \n          payload: { \n            story, \n            scene: fallbackScene, \n            characterPack \n          } \n        });\n      } finally {\n        dispatch({ type: ACTIONS.SET_GENERATING, payload: false });\n      }\n    },\n    \n    // Generate next scene based on choice\n    generateNextScene: async (choice) => {\n      dispatch({ type: ACTIONS.SET_GENERATING, payload: true });\n      \n      try {\n        const currentContext = {\n          personaScore: state.personaScore,\n          totalChoicesMade: state.totalChoicesMade,\n          character: state.currentStory?.character,\n        };\n        \n        const nextScene = await AIStoryService.generateNextScene(choice, currentContext);\n        dispatch({ type: ACTIONS.SET_SCENE, payload: nextScene });\n        \n        return nextScene;\n      } catch (error) {\n        console.error('Error generating next scene:', error);\n        throw error;\n      } finally {\n        dispatch({ type: ACTIONS.SET_GENERATING, payload: false });\n      }\n    },\n    \n    setScene: (scene) => {\n      dispatch({ type: ACTIONS.SET_SCENE, payload: scene });\n    },\n    \n    updatePersonaScore: (delta) => {\n      dispatch({ type: ACTIONS.UPDATE_PERSONA, payload: delta });\n    },\n    \n    resetGame: () => {\n      dispatch({ type: ACTIONS.RESET_GAME });\n    },\n    \n    setStoryPacks: (packs) => {\n      dispatch({ type: ACTIONS.SET_STORY_PACKS, payload: packs });\n    },\n    \n    incrementAdsWatched: () => {\n      dispatch({ type: ACTIONS.INCREMENT_ADS });\n    },\n    \n    getPersonaMessage: () => {\n      const score = state.personaScore;\n      if (score >= 80) return \"Perfect embodiment! You're truly in character.\";\n      if (score >= 60) return \"Great portrayal! You understand this character well.\";\n      if (score >= 40) return \"Good effort! Some choices felt authentic.\";\n      if (score >= 20) return \"Interesting interpretation! Very different from the original.\";\n      return \"Completely off-character! But that's an adventure too.\";\n    },\n    \n    findSceneById: (sceneId) => {\n      // For AI-generated stories, we don't pre-load scenes\n      // This method is mainly for backward compatibility\n      return null;\n    },\n    \n    loadGameState,\n    saveGameState,\n  };\n\n  return (\n    <GameContext.Provider value={{ state, ...gameActions }}>\n      {children}\n    </GameContext.Provider>\n  );\n}\n\n// Custom hook to use game context\nexport function useGame() {\n  const context = useContext(GameContext);\n  if (!context) {\n    throw new Error('useGame must be used within a GameContextProvider');\n  }\n  return context;\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}